version: '3.4'

services:

  DigitalHSEdb:
    container_name: DigitalHSEdb
    environment:
      - SA_PASSWORD=Admin1234!!
      - ACCEPT_EULA=Y
    restart: always
    ports:
      - 8600:1433
    networks:
      - DigitalHSE_network

  DigitalHSE.api:
    container_name: DigitalHSE.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8001
      - ConnectionStrings:DefaultConnection=Server=DigitalHSEdb;Database=DigitalHSEDB;User Id=sa;Password=Admin1234!!;TrustServerCertificate=True;
      # Connect DigitalHSEdb in SSMS using IpConfig -> Ethernet adapter vEthernet (WSL) -> Ip V4
      - ConnectionStrings:RedisConnection=redis:6379,defaultdatabase=11
      # Check redis content -> docker exec -it redis redis-cli
      - HealthCheck:Uri=http://DigitalHSE.api:8001/healthz
      - RabbitMQSettings:HostName=rabbitmq
      - RabbitMQSettings:UserName=user
      - RabbitMQSettings:Password=password
    ports:
      - "18001:8001"
    depends_on:
      - DigitalHSEdb
      - rabbitmq
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    networks:
      - DigitalHSE_network
    healthcheck:
        interval: 30s
        timeout: 10s
        retries: 5
    # Health check and retry is for this purpose:
    # RabbitMQ and Sender (AnotherDigitalHSE) should start first. Then DigitalHSE is able to be up...

  anotherDigitalHSEdb:
    container_name: anotherDigitalHSEdb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Admin1234
      - POSTGRES_DB=anotherDigitalHSEdb
    restart: always
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - DigitalHSE_network

  anotherDigitalHSE.api1:
    container_name: anotherDigitalHSE.api1
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8002
      - ConnectionStrings:DefaultConnection=Server=anotherDigitalHSEdb;Port=5432;Database=anotherDigitalHSEdb;User Id=postgres;Password=Admin1234
      - RabbitMQSettings:HostName=rabbitmq
      - RabbitMQSettings:UserName=user
      - RabbitMQSettings:Password=password
    depends_on:
      - anotherDigitalHSEdb
      - rabbitmq
    ports:
      - 8002:8002
    networks:
      - DigitalHSE_network

  anotherDigitalHSE.api2:
    container_name: anotherDigitalHSE.api2
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8002
      - ConnectionStrings:DefaultConnection=Server=anotherDigitalHSEdb;Port=5432;Database=anotherDigitalHSEdb;User Id=postgres;Password=Admin1234
      - RabbitMQSettings:HostName=rabbitmq
      - RabbitMQSettings:UserName=user
      - RabbitMQSettings:Password=password
    depends_on:
      - anotherDigitalHSEdb
      - rabbitmq
    ports:
      - 8003:8002
    networks:
      - DigitalHSE_network

  anotherDigitalHSE.api3:
    container_name: anotherDigitalHSE.api3
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8002
      - ConnectionStrings:DefaultConnection=Server=anotherDigitalHSEdb;Port=5432;Database=anotherDigitalHSEdb;User Id=postgres;Password=Admin1234
      - RabbitMQSettings:HostName=rabbitmq
      - RabbitMQSettings:UserName=user
      - RabbitMQSettings:Password=password
    depends_on:
      - anotherDigitalHSEdb
      - rabbitmq
    ports:
      - 8004:8002
    networks:
      - DigitalHSE_network

  anotherDigitalHSE.loadbalancer:
    container_name: anotherDigitalHSE.loadbalancer
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8010
      - ReverseProxy:Routes:api-route:ClusterId=api-cluster
      - ReverseProxy:Routes:api-route:Match:Path={**catch-all}
      - ReverseProxy:Clusters:api-cluster:LoadBalancingPolicy=RoundRobin
      - ReverseProxy:Clusters:api-cluster:HealthCheck:Active:Enabled=true
      - ReverseProxy:Clusters:api-cluster:HealthCheck:Active:Interval=00:00:05
      - ReverseProxy:Clusters:api-cluster:HealthCheck:Active:Timeout=00:00:05
      - ReverseProxy:Clusters:api-cluster:HealthCheck:Active:Policy=ConsecutiveFailures
      - ReverseProxy:Clusters:api-cluster:HealthCheck:Active:Path=/healthz
      - ReverseProxy:Clusters:api-cluster:Destinations:destination1:Address=http://anotherDigitalHSE.api1:8002
      - ReverseProxy:Clusters:api-cluster:Destinations:destination1:Health:Active=http://anotherDigitalHSE.api1:8002/healthz
      - ReverseProxy:Clusters:api-cluster:Destinations:destination2:Address=http://anotherDigitalHSE.api2:8002
      - ReverseProxy:Clusters:api-cluster:Destinations:destination2:Health:Active=http://anotherDigitalHSE.api2:8002/healthz
      - ReverseProxy:Clusters:api-cluster:Destinations:destination3:Address=http://anotherDigitalHSE.api3:8002
      - ReverseProxy:Clusters:api-cluster:Destinations:destination3:Health:Active=http://anotherDigitalHSE.api3:8002/healthz
    ports:
      - 8010:8010
    networks:
      - DigitalHSE_network

  prometheus:
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/Monitoring/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - DigitalHSE.api
    networks:
      - DigitalHSE_network

  grafana:
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3700:3000"
    depends_on:
      - prometheus
    networks:
      - DigitalHSE_network

  redis:
    container_name: redis
    ports:
      - "6379:6379"
      - "9101:8001"
    networks:
      - DigitalHSE_network
 
  elasticsearch:
    container_name: elasticsearch
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - DigitalHSE_network
    # not working !

  kibana:
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - XPACK_SECURITY_ENABLED=false
    ports:
      - "15601:5601"
    depends_on:
      - elasticsearch
    networks:
      - DigitalHSE_network
    # not working !
 
  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=behzad@dara.com
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    ports:
      - 5050:80
    volumes:
      - pgadmin_data:/root/.pgadmin
    networks:
      - DigitalHSE_network

  portainer:
    container_name: portainer
    restart: always
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - DigitalHSE_network
 
  rabbitmq:
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - DigitalHSE_network

networks:
  DigitalHSE_network:
    driver: bridge
